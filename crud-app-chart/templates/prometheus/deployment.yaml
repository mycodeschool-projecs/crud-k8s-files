{{- if and .Values.prometheus.enabled .Values.features.monitoring }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "crud-app.fullname" . }}-prometheus
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "crud-app.prometheus.labels" . | nindent 4 }}
spec:
  replicas: 1

  selector:
    matchLabels:
      {{- include "crud-app.prometheus.selectorLabels" . | nindent 6 }}

  template:
    metadata:
      labels:
        {{- include "crud-app.prometheus.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}

    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}

      # Security context
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534

      containers:
        - name: prometheus
          image: {{ include "crud-app.image" (dict "image" .Values.prometheus.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}

          # Prometheus command arguments
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time=30d'
            - '--storage.tsdb.retention.size=10GB'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
            - '--log.level=info'

          # Container ports
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP

          # Volume mounts
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
              readOnly: true
            - name: prometheus-data
              mountPath: /prometheus

          # Resource configuration
          {{- if .Values.prometheus.resources }}
          resources:
            {{- toYaml .Values.prometheus.resources | nindent 12 }}
          {{- end }}

          # Health checks
          {{- if .Values.healthChecks.enabled }}
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          {{- end }}

      # Volumes
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ include "crud-app.fullname" . }}-config
            items:
              - key: prometheus.yml
                path: prometheus.yml
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: {{ include "crud-app.fullname" . }}-prometheus-pvc
{{- end }}