{{- if and .Values.elasticsearch.enabled .Values.features.logging }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "crud-app.fullname" . }}-elasticsearch
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "crud-app.elasticsearch.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "crud-app.fullname" . }}-elasticsearch
  replicas: 1  # Single node for simplicity

  selector:
    matchLabels:
      {{- include "crud-app.elasticsearch.selectorLabels" . | nindent 6 }}

  template:
    metadata:
      labels:
        {{- include "crud-app.elasticsearch.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}

    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}

      # Init container to configure Elasticsearch keystore
      initContainers:
        - name: configure-elasticsearch
          image: {{ include "crud-app.image" (dict "image" .Values.elasticsearch.image "global" .Values.global) }}
          command: ['sh', '-c']
          args:
            - |
              echo "Configuring Elasticsearch keystore..."
              bin/elasticsearch-keystore create
              echo "${ELASTIC_PASSWORD}" | bin/elasticsearch-keystore add -x bootstrap.password
              echo "Keystore configured successfully"
          env:
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "crud-app.fullname" . }}-elk-secrets
                  key: elastic_password
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data

      containers:
        - name: elasticsearch
          image: {{ include "crud-app.image" (dict "image" .Values.elasticsearch.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.elasticsearch.image.pullPolicy }}

          # Environment variables for Elasticsearch configuration
          env:
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "crud-app.fullname" . }}-elk-secrets
                  key: elastic_password
            - name: KIBANA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "crud-app.fullname" . }}-elk-secrets
                  key: kibana_password
            # Cluster configuration
            - name: cluster.name
              value: "elasticsearch"
            - name: node.name
              value: "elasticsearch-0"
            - name: discovery.type
              value: "single-node"
            # Security configuration
            - name: xpack.security.enabled
              value: "true"
            - name: xpack.security.http.ssl.enabled
              value: "false"
            - name: xpack.security.transport.ssl.enabled
              value: "false"
            # Performance configuration
            - name: ES_JAVA_OPTS
              value: {{ .Values.elasticsearch.javaOpts | quote }}
            - name: bootstrap.memory_lock
              value: "true"

          # Container ports
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP

          # Volume mounts
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data

          # Resource configuration
          {{- if .Values.elasticsearch.resources }}
          resources:
            {{- toYaml .Values.elasticsearch.resources | nindent 12 }}
          {{- end }}

          # Health checks
          {{- if .Values.healthChecks.enabled }}
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
              httpHeaders:
                - name: Authorization
                  value: "Basic {{ printf "elastic:%s" .Values.elasticsearch.password | b64enc }}"
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /_cluster/health?wait_for_status=yellow&timeout=5s
              port: 9200
              httpHeaders:
                - name: Authorization
                  value: "Basic {{ printf "elastic:%s" .Values.elasticsearch.password | b64enc }}"
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          {{- end }}

      # Security context
      securityContext:
        fsGroup: 1000

  # Volume claim templates for StatefulSet
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
        labels:
          {{- include "crud-app.elasticsearch.labels" . | nindent 10 }}
      spec:
        {{- if .Values.global.storageClass }}
        storageClassName: {{ .Values.global.storageClass }}
        {{- end }}
        accessModes:
          - {{ .Values.elasticsearch.storage.accessMode }}
        resources:
          requests:
            storage: {{ .Values.elasticsearch.storage.size }}
{{- end }}
