apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "crud-app.fullname" . }}-auth-service
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "crud-app.auth-service.labels" . | nindent 4 }}
spec:
  # Deployment strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

  # Number of replicas
  replicas: {{ .Values.authService.replicas | default 1 }}

  # Pod selection
  selector:
    matchLabels:
      {{- include "crud-app.auth-service.selectorLabels" . | nindent 6 }}

  # Pod template
  template:
    metadata:
      labels:
        {{- include "crud-app.auth-service.selectorLabels" . | nindent 8 }}
      annotations:
        # Force restart on config/secret changes
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}

    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}

      # Init containers for dependency checking
      {{- if .Values.initContainers.enabled }}
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ include "crud-app.fullname" . }}-mysql 3306; do echo "Waiting for MySQL..."; sleep 2; done']
      {{- end }}

      containers:
        - name: auth-service
          image: {{ include "crud-app.image" (dict "image" .Values.images.authService "global" .Values.global) }}
          imagePullPolicy: {{ .Values.images.authService.pullPolicy }}

          # Environment variables
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.app.springProfiles | quote }}
            - name: SERVER_PORT
              value: {{ .Values.services.authService.port | quote }}
            - name: SPRING_DATASOURCE_URL
              value: {{ include "crud-app.mysql.connectionString" . }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "crud-app.fullname" . }}-config
                  key: DB_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "crud-app.fullname" . }}-db-credentials
                  key: DB_PASSWORD
            # Tracing configuration
            {{- if .Values.zipkin.enabled }}
            - name: SPRING_ZIPKIN_BASE_URL
              value: "http://{{ include "crud-app.fullname" . }}-zipkin:9411"
            - name: SPRING_SLEUTH_ZIPKIN_ENABLED
              value: "true"
            {{- end }}
            # Additional environment variables
            {{- range $key, $value := .Values.app.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}

          # Container ports
          ports:
            - name: http
              containerPort: {{ .Values.services.authService.port }}
              protocol: TCP

          # Resource limits
          {{- if .Values.authService.resources }}
          resources:
            {{- toYaml .Values.authService.resources | nindent 12 }}
          {{- end }}

          # Health checks
          {{- if .Values.healthChecks.enabled }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          {{- end }}