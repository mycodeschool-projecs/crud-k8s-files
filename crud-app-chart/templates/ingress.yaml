# STEP 9: Ingress Configuration
# =============================

# ============================================
# templates/ingress.yaml
# ============================================
# Ingress configuration for external access to all services
{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "crud-app.fullname" . }}-ingress
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "crud-app.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    # Additional helpful annotations
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}

  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}

  rules:
    {{- range .Values.ingress.hosts | default (list "") }}
    - {{- if . }}
      host: {{ . | quote }}
      {{- end }}
      http:
        paths:
          # Core application services (order matters - most specific first)

          # Command Service (microservice 1)
          - path: {{ $.Values.ingress.paths.commandService }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "crud-app.fullname" $ }}-command-service
                port:
                  number: {{ $.Values.services.commandService.port }}

          # Auth Service (API endpoints)
          - path: {{ $.Values.ingress.paths.authService }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "crud-app.fullname" $ }}-auth-service
                port:
                  number: {{ $.Values.services.authService.port }}

          # Monitoring and observability tools
          {{- if and $.Values.kibana.enabled $.Values.features.logging }}
          - path: {{ $.Values.ingress.paths.kibana }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "crud-app.fullname" $ }}-kibana
                port:
                  number: 5601
          {{- end }}

          {{- if and $.Values.zipkin.enabled $.Values.features.tracing }}
          - path: {{ $.Values.ingress.paths.zipkin }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "crud-app.fullname" $ }}-zipkin
                port:
                  number: 9411
          {{- end }}

          {{- if and $.Values.grafana.enabled $.Values.features.monitoring }}
          - path: {{ $.Values.ingress.paths.grafana }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "crud-app.fullname" $ }}-grafana
                port:
                  number: 3000
          {{- end }}

          # Optional: Prometheus (usually not exposed externally in production)
          {{- if and $.Values.prometheus.enabled $.Values.ingress.exposePrometheus }}
          - path: /prometheus
            pathType: Prefix
            backend:
              service:
                name: {{ include "crud-app.fullname" $ }}-prometheus
                port:
                  number: 9090
          {{- end }}

          # React App (frontend) - should be last as it catches all remaining paths
          - path: {{ $.Values.ingress.paths.reactApp }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "crud-app.fullname" $ }}-react-app
                port:
                  number: {{ $.Values.services.reactApp.port }}
    {{- end }}
{{- end }}

---
# ============================================
# Optional: NetworkPolicy for security
# ============================================
{{- if .Values.networkPolicy.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "crud-app.fullname" . }}-network-policy
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "crud-app.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ include "crud-app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}

  policyTypes:
    - Ingress
    - Egress

  # Ingress rules - define what can access our pods
  ingress:
    # Allow ingress controller to access services
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3000  # React app
        - protocol: TCP
          port: 8081  # Command service
        - protocol: TCP
          port: 8082  # Auth service
        - protocol: TCP
          port: 5601  # Kibana
        - protocol: TCP
          port: 9411  # Zipkin
        - protocol: TCP
          port: 3000  # Grafana

    # Allow internal communication between pods
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: {{ include "crud-app.name" . }}
              app.kubernetes.io/instance: {{ .Release.Name }}
      ports:
        - protocol: TCP
          port: 3306  # MySQL
        - protocol: TCP
          port: 9200  # Elasticsearch
        - protocol: TCP
          port: 9300  # Elasticsearch transport
        - protocol: TCP
          port: 3100  # Logstash
        - protocol: TCP
          port: 9090  # Prometheus

  # Egress rules - define what our pods can access
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

    # Allow internal communication
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: {{ include "crud-app.name" . }}
              app.kubernetes.io/instance: {{ .Release.Name }}

    # Allow external HTTP/HTTPS (for downloading plugins, etc.)
    - to: []
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
{{- end }}