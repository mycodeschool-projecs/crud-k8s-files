apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.client.name }}
  labels:
    app: {{ .Values.client.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.client.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.client.name }}
    spec:
      containers:
        - name: react-container
          image: {{ include "crud-proj.image" (dict "image" .Values.images.clientService "global" .Values.global) }}
          imagePullPolicy: {{ .Values.images.clientService.pullPolicy }}
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: {{ .Values.client.volumeMount1.name }}
              mountPath: {{ .Values.client.volumeMount1.mountPath }}
              subPath: {{ .Values.client.volumeMount1.subPath }}
            - name: {{ .Values.client.volumeMount2.name }}
              mountPath: {{ .Values.client.volumeMount2.mountPath }}
              subPath: {{ .Values.client.volumeMount2.subPath }}
      volumes:
        - name: {{ .Values.client.volumeMount1.name }}
          configMap:
            name: {{ include "crud-proj.fullname" . }}-app-config
            items:
              - key: config.json
                path: config.json
        - name: {{ .Values.client.volumeMount2.name }}
          secret:
            secretName: react-env-secret
            items:
              - key: env-config.js
                path: env-config.js
---
apiVersion: v1
kind: Service
metadata:
  name: react-app
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: react-app